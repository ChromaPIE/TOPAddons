buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}


apply plugin: "net.minecraftforge.gradle.forge"


repositories {
    mavenCentral()
    maven {
        name = "tterag (The One Probe)"
        url = "https://maven.tterrag.com"
    }
    maven {
        name = "covers1624 (RedstoneFlux)"
        url "http://maven.covers1624.net/"
    }
    maven {
        name = "player (Forestry)"
        url = "http://maven.ic2.player.to"
    }
    maven {
	    name = "progwml6 (JEI)"
	    url = "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    deobfCompile("mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.+") {
        transitive = false
    }
    //deobfCompile "net.sengir.forestry:forestry_1.12.2:5.8.0.277+"

    //Jar mods in ./libs
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "cofh:RedstoneFlux:1.12-2.+:universal"
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

version = mc_version + '-' + MAJOR + '.' + MINOR + '.' + PATCH
group = "io.github.drmanganese"
archivesBaseName = "topaddons"

minecraft {
    version = mc_version + '-' + forge_version
    runDir = "run"
    mappings = mcp_mappings

    replace "@VERSION@", project.version
    useDepAts = true
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar {
    from "LICENSE"
}

idea { module { inheritOutputDirs = true } }
